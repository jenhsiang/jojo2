/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M4
 * Generated at: 2016-11-14 13:28:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import teachDB.DbBean;
import org.joda.time.DateTime;
import org.joda.time.Period;
import org.joda.time.PeriodType;

public final class rent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	public boolean checkReq(Object obj){
		boolean check = false ;
		if(obj != null && !((String)obj).equals("")){
			check = true;
		}
		return check;
	}
	public Object getReq(Object obj){
		Object getS = "";
		if(obj != null){
			getS = (Date) obj;
		}
		return getS;
	}
	public int[] checkrent(int book_id,int member_id){
		int[] result = new int[2];
				DbBean db = new DbBean();
				DateTime nowdate = new DateTime();
				DateTime endtime = nowdate.minusDays(1);
				List whereList = new ArrayList();
				whereList.add(book_id);
				whereList.add(member_id);
				whereList.add(nowdate.toString("yyyy-MM-dd HH:mm:ss"));
				whereList.add(endtime.toString("yyyy-MM-dd HH:mm:ss"));	
				List whereList2 = new ArrayList();
				whereList2.add(book_id);
				whereList2.add(member_id);
				whereList2.add(nowdate.toString("yyyy-MM-dd HH:mm:ss"));		
				List duringReserve = db.SelectRSwhere("select * from borrow_record where book_id = ? and member_id = ? and reserve_date <= ? and reserve_deadline >= ? and borrow_date is null and return_date is null and givefine = 0  ",whereList);
				List overReserve   = db.SelectRSwhere("select * from borrow_record where book_id = ? and member_id = ? and reserve_deadline <= ? and borrow_date is null and return_date is null and givefine = 0  ",whereList2);
				List duringRent    = db.SelectRSwhere("select * from borrow_record where book_id = ? and member_id = ? and borrow_date <= ? and borrow_deadline >= ? and  return_date is null and givefine = 0  ",whereList);
				List overRent	   = db.SelectRSwhere("select * from borrow_record where book_id = ? and member_id = ? and borrow_deadline <= ?  and return_date is null and givefine = 0 ",whereList2);
				List checkList = new ArrayList();
				if(duringReserve != null && duringReserve.size() > 0){
					result[0] = 1;
					checkList.addAll(duringReserve);
				}else if(overReserve != null && overReserve.size() > 0){
					result[0] = 2;
					checkList.addAll(overReserve);
				}else if(duringRent != null && duringRent.size() > 0){
					result[0] = 3;
					checkList.addAll(duringRent);
				}else if(overRent != null && overRent.size() > 0){
					result[0] = 4;
					checkList.addAll(overRent);
				}
				if(checkList != null && checkList.size() > 0){
					for ( int j = 0; j < checkList.size(); j++ ) {
						Map map = (Map) checkList.get(j); 	
			        	int borrow_id  = (Integer)map.get("borrow_id");
						result[1] = borrow_id;	
					}
				}
		return result;
	}
	public String rentState(int rent_id){
		String rent = "";
		switch(rent_id) { 
			case 1: 
				rent = "預約中"; 
				break; 
			case 2: 
				rent = "已超過預約期限"; ; 
				break; 
			case 3: 
				rent = "借閱中"; ; 
				break; 
			case 4: 
				rent = "已超過借閱期限，請盡快還書"; ; 
				break; 
		} 
		return rent;
	}
	public int getFine(int givefine,int fine,int rent_mark,Object reserve_deadline,Object borrow_deadline){
		int money = 0;
		if(givefine == 1){
			money = fine;
		}else if(rent_mark == 2 || rent_mark == 4){
			DateTime get_deadline = null;
			if(rent_mark == 2 && reserve_deadline != null ){
				get_deadline = new DateTime((Date)reserve_deadline).plusDays(1);
			}else if(rent_mark == 4 && borrow_deadline != null ){
				get_deadline = new DateTime((Date)borrow_deadline).plusDays(1);
			}
			if(get_deadline != null){
				DateTime nowdate = new DateTime();
				Period p = new Period(get_deadline, nowdate, PeriodType.days());
				money = 2 * p.getDays();
			}	
		}
		return money;
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/_include/menu.jsp", Long.valueOf(1479121096829L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.joda.time.Period");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("teachDB.DbBean");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.joda.time.DateTime");
    _jspx_imports_classes.add("org.joda.time.PeriodType");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	if ( session.getAttribute ("member_id") != null && session.getAttribute ("member_name") != null && session.getAttribute ("member_email") != null){
		int    member_id 		= Integer.parseInt((String)session.getAttribute ("member_id"));
		String member_name  = (String)session.getAttribute ("member_name");
		String member_email = (String)session.getAttribute ("member_email");
		DbBean  db = new DbBean();
		String firstchoice  = "類別";
		int    secondchoice = 0 ;
		String bookname   = "" ;
		if(checkReq(request.getParameter("firstchoice"))){
			firstchoice = (String)request.getParameter("firstchoice");
		}
		if(checkReq(request.getParameter("secondchoice"))){
			secondchoice = Integer.parseInt((String)request.getParameter("secondchoice"));
		}
		if(checkReq(request.getParameter("bookname"))){
			bookname = (String)request.getParameter("bookname").replaceAll("\\s+", "");
		}

      out.write("\n");
      out.write("<html  ng-app=\"app\" ng-controller= \"mainCrtl\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n");
      out.write("<title>看啥租啥租書店</title>\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"modaal.css\" media=\"screen\">\n");
      out.write("<script src=\"js/angular.js\"></script>\n");
      out.write("<script src=\"js/book.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body  bgcolor=\"#FFFCA7\"> \n");
      out.write("\t\t<center>\n");
      out.write(" <table>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t<p style=\"color:#088A85\" align=\"center\" ><font face=\"Algerian\" size=\"250\">GAMEBOARD WORLD</font><a href=\"https://www.facebook.com/%E5%A4%A9%E5%A4%A9%E5%AD%B8%E6%A1%8C%E9%81%8A-1118376901610135/\"  target=\"_blank\" ></a>\n");
      out.write("\t\t<a href=\"https://www.facebook.com/%E5%A4%A9%E5%A4%A9%E5%AD%B8%E6%A1%8C%E9%81%8A-1118376901610135/\"  target=\"_blank\" ><img src=\"fb.png\" style=\"width:50px;height:40px;\" align=\"right\"><img src=\"in.png\" style=\"width:50px;height:40px;\" align=\"right\"></a></p>\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<style >\n");
      out.write("h1 {\n");
      out.write("    font-size: 700%;\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("ul {\n");
      out.write("    list-style-type: none;\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    overflow: hidden;\n");
      out.write("    background-color: #0B615E;\n");
      out.write("}\n");
      out.write("\n");
      out.write("li {\n");
      out.write("\n");
      out.write("    float: left;\n");
      out.write("    border-right:1px solid #bbb;\n");
      out.write("}\n");
      out.write("\n");
      out.write("li:last-child {\n");
      out.write("    border-right: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("li a {\n");
      out.write("    display: block;\n");
      out.write("    color: white;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 14px 16px;\n");
      out.write("    text-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("li a:hover:not(.active) {\n");
      out.write("    background-color: #111;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".active {\n");
      out.write("    background-color: #4CAF50;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<center>\n");
      out.write("<table style=\"border: 0px solid #0B614B;\" style=\"width:100%\">\n");
      out.write("\t<tr>\n");
      out.write("\t<th>\n");
      out.write("\t<image src=LOGODC2.png width=\"100px\" height=\"90\">\n");
      out.write("\t</th>\n");
      out.write("\t\t<th>\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t\t  \n");
      out.write("\t\t\t\t  <li><a class=\"active\" href=\"index.jsp\" target=\"_self\">Home</a></li>\n");
      out.write("\t\t\t\t  <li><a href=\"index4.jsp\" target=\"_self\">Shop</a></li>\n");
      out.write("\t\t\t\t  <li><a href=\"book.jsp\" target=\"_self\">Order</a></li>\n");
      out.write("\t\t\t\t  \n");
      out.write("\t\t\t\t  <li><a href=\"contact.jsp\" target=\"_self\">Contact us</a></li>\n");
      out.write("\t\t\t\t  <li><a href=\"video.jsp\" target=\"_self\">Video</a></li>\n");
      out.write("\t\t\t\t  <li class=\"m-5\"><a href=\"rent.jsp\" target=\"_self\">Status</a></li>\n");
      out.write("\t\t\t\t  <li style=\"float:right\"><a href=\"register.jsp\" target=\"_self\">Sign up</a></li>\n");
      out.write("\t\t\t\t  <li class=\"m-7\"><a href=\"login.jsp\" target=\"_self\">\n");
      out.write("\t\t\t\t");
	if ( session.getAttribute ("member_name") != null) {
      out.write("\n");
      out.write("\t\t\t\tMODIFY\n");
      out.write("\t\t\t\t");
} else {
      out.write("\n");
      out.write("\t\t\t\tSign in\n");
      out.write("\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t</a></li>\n");
      out.write("\t\t\t\t");
	if ( session.getAttribute ("member_name") != null) {
      out.write("\n");
      out.write("\t\t\t\t<li class=\"m-8\"><a href=\"logout.jsp\" target=\"_self\">Log out</a></li>\n");
      out.write("\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t\t\n");
      out.write("        \n");
      out.write("\n");
      out.write("</th>\n");
      out.write("</table>\n");
      out.write("</center>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t</table></center>\n");
      out.write("\t<div id=\"tfheader\">\n");
      out.write("\t\t<form id=\"tfnewsearch\" action = \"rent.jsp\"  method=\"post\" ng-init=\"setFirst('");
      out.print(firstchoice);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(secondchoice);
      out.write("');\">\n");
      out.write("\t\t<input type=\"hidden\" name=\"firstchoice\" id=\"firstchoice\" value=\"{{add_first}}\">\n");
      out.write("\t\t<input type=\"hidden\" name=\"secondchoice\" id=\"secondchoice\" value=\"{{add_second.search_id}}\">\n");
      out.write("\t\t<select class=\"city\" ng-model=\"add_first\" ng-options=\"name.search_type as name.search_type for name in firstName\"  ng-change=\"getFirst();\">\n");
      out.write("\t\t</select>\n");
      out.write("\t\t<select class=\"town\" ng-model=\"add_second\" ng-options=\"name as name.search_name for name in setSecondName\" >\n");
      out.write("\t\t</select>\n");
      out.write("\t\t        <input type=\"text\" class=\"tftextinput\"  id = \"bookname\" name = \"bookname\"  size=\"21\" maxlength=\"120\" value=\"");
      out.print(bookname);
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"submit\" value=\"search\" class=\"tfbutton\">\n");
      out.write("\t\t</form>\n");
      out.write("\t<div class=\"tfclear\"></div>\n");
      out.write("\t</div>\n");
      out.write("<h2 style=\"color:blACK\" align=\"center\" ><font face=\"Algerian\">BOOKING STATUS</font></h2>\n");
      out.write("<table border=\"0\" cellspacing=\"1\" cellpadding=\"0\" width=\"100%\">\n");

			int even_rent = 0;
			List chooseList = new ArrayList();
				 chooseList.add(member_id);
			String choice_datebase = "";
			if(firstchoice.equals("類別")){
				 choice_datebase = "category";
			}else if(firstchoice.equals("推薦")){
				 choice_datebase = "recommend";
			}	 
			String book_sql  = " select a.*,b." + choice_datebase + "_name from book as a left join " + choice_datebase + " as b on a." + choice_datebase + "_id = b." + choice_datebase + "_id where a.book_id in ";
				   book_sql += " ( select  book_id from borrow_record where member_id = ? GROUP BY book_id ) ";
			if(secondchoice == 0 && bookname.equals("")){
				book_sql += " order by a.book_id asc ";
			}else if(secondchoice == 0 && !bookname.equals("")){
				chooseList.add("%" + bookname + "%");
				book_sql += "  and a.book_name like ? order by a.book_id asc";
			}else if(secondchoice != 0 && bookname.equals("")){
				chooseList.add(secondchoice);
				book_sql += " and a." + choice_datebase + "_id = ?  order by a.book_id asc";
			}else if(secondchoice != 0 && !bookname.equals("")){
				chooseList.add(secondchoice);
				chooseList.add("%" + bookname + "%");
				book_sql += " and  a." + choice_datebase + "_id = ?  and  a.book_name like ? order by a.book_id asc";
			}
			List bookList = db.SelectRSwhere(book_sql,chooseList);
			if(bookList != null && bookList.size() > 0){
				for(int i=0;i<bookList.size();i++){
					Map map = (Map) bookList.get(i);
					int       book_id   	=(Integer) map.get( "book_id");
					int    	  choice_id   =(Integer) map.get( choice_datebase + "_id");
					String    book_name     =(String) map.get( "book_name");
					String    author        =(String) map.get( "author");
					String    publishing    =(String) map.get( "publishing");
					Date      release_date  =(Date) map.get( "release_date");
					int       book_price    =(Integer) map.get( "book_price");
					String    book_img      =(String) map.get( "book_img");
					int       book_total    =(Integer) map.get( "book_total");
					String    choice_name =(String) map.get( choice_datebase + "_name");
					int[] rent_array = checkrent(book_id,member_id);
					int rent_mark = rent_array[0];
					int rent_borrow_id = rent_array[1];
					String rentstate = rentState(rent_mark) ;	
					 if(rent_mark > 0){
						 even_rent ++;

      out.write("\n");
      out.write("  <tr>\n");
      out.write("    <td width=\"17\" valign=\"top\"><p>");
      out.print(book_id);
      out.write(".</p></td>\n");
      out.write("    <td width=\"140\" valign=\"top\"><p><a href=\"confirm.html\"><img border=\"0\" width=\"140\" height=\"190\" src=\"");
      out.print(book_img);
      out.write("\" alt=\"bvcb\" /></a></p></td>\n");
      out.write("    <td width=\"438\" valign=\"top\"><table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><h3>");
      out.print(book_name);
      out.write("\n");
      out.write("\t\t<font color=\"red\">&nbsp;&nbsp&nbsp;&nbsp&nbsp;&nbsp<strong>");
      out.print(rentstate);
      out.write("</strong></font>\n");
      out.write("\t\t");
 if(rent_mark == 1){
      out.write("\n");
      out.write("\t\t<font color=\"red\"><input id=\"cancel_reservebtn");
      out.print(i);
      out.write("\" type=\"button\" value=\"取消預約\" onclick=\"getreserve('");
      out.print(i);
      out.write("','delete','");
      out.print(rent_borrow_id);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(book_name);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(book_id);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(book_price);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(member_id);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(member_name);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(member_email);
      out.write("')\"></font>\t\n");
      out.write("\t\t");
 } 
      out.write("\n");
      out.write("\t\t</h3>\n");
      out.write("              <p>出版社：");
      out.print(publishing);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>作者：");
      out.print(author);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>出版日期：");
      out.print(release_date);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><table border=\"0\" cellspacing=\"1\" cellpadding=\"0\" width=\"100%\">\n");
      out.write("          <tr>\n");
      out.write("            <td><p>類別：");
      out.print(choice_name);
      out.write("</p></td>\n");
      out.write("          </tr>\n");
      out.write("        </table></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>庫存：");
      out.print(book_total);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td><p>租金: <span class=\"style3\">");
      out.print(book_price);
      out.write("</span> NTD</p>\n");
      out.write("\t\t</td>\n");
      out.write("\t\t\n");
      out.write("      </tr>\n");
      out.write("    </table></td>\n");

	List whereList = new ArrayList();
					whereList.add(member_id);
					whereList.add(book_id);
	List borrowlist = db.SelectRSwhere("select * from borrow_record where member_id = ? and book_id = ? order by borrow_id desc limit 0,1 ",whereList);
	if ( borrowlist != null && borrowlist.size()>0 ) { 
			for ( int j = 0; j < borrowlist.size(); j++ ) {
				Map borrowmap = (Map) borrowlist.get(j); 	
			        	int borrow_id  		     =(Integer)borrowmap.get("borrow_id");
						Object reserve_date 	 = getReq((Date)borrowmap.get("reserve_date"));
						Object reserve_deadline  = getReq((Date)borrowmap.get("reserve_deadline"));
						Object borrow_date 	     = getReq((Date)borrowmap.get("borrow_date"));
						Object borrow_deadline   = getReq((Date)borrowmap.get("borrow_deadline"));
						Object return_date       = getReq((Date)borrowmap.get("return_date"));
						int fine 			   	 = (Integer)borrowmap.get("fine");
						int givefine 			 = (Integer)borrowmap.get("givefine");
						int realfine             =	getFine(givefine,fine,rent_mark,reserve_deadline,borrow_deadline);

      out.write("\t\n");
      out.write("\t <td width=\"514\" valign=\"top\"><table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">\n");
      out.write("       <tr>\n");
      out.write("        <td><h3 style=\"color:blue;\">最近租書紀錄</h3></td>\n");
      out.write("\t\t<td><a href=\"detail.jsp?book_id=");
      out.print(book_id);
      out.write("&book_name=");
      out.print(book_name);
      out.write("\" class=\"btn iframe\"> <button class=\"ui-hidden\">所有租書紀錄</button></a></td>\n");
      out.write("      </tr>\n");
      out.write("\t  <tr>\n");
      out.write("        <td colspan=\"2\"><p>預約日期：");
      out.print(reserve_date);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>預約到期日期：");
      out.print(reserve_deadline);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>借書日期：");
      out.print(borrow_date);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><table border=\"0\" cellspacing=\"1\" cellpadding=\"0\" width=\"100%\">\n");
      out.write("          <tr>\n");
      out.write("            <td><p>應歸還到期日：");
      out.print(borrow_deadline);
      out.write("</p></td>\n");
      out.write("          </tr>\n");
      out.write("        </table></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td colspan=\"2\"><p>歸還日期：");
      out.print(return_date);
      out.write("</p></td>\n");
      out.write("      </tr>\n");
      out.write("      <tr>\n");
      out.write("        <td><p>罰金: <span class=\"style3\">");
      out.print(realfine);
      out.write("</span> NTD</p>\n");
      out.write("\t\t\n");
      out.write("\t\t</td>\n");
      out.write("\t\t\n");
      out.write("      </tr>\n");
      out.write("    </table></td>\n");

			}
		}

      out.write("\t\t\t\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("    <td colspan=\"3\"><p>&nbsp;</p></td>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("    <td colspan=\"3\"><p>&nbsp;</p></td>\n");
      out.write("  </tr>\n");
      out.write(" ");

					}
				}
			}
	if(even_rent == 0){

      out.write("\n");
      out.write("<h1 align=\"center\">您目前借閱的書都已歸還~~~</h1>\n");
}
      out.write("\n");
      out.write("</table>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n");
      out.write("<script src=\"js/jquery.easing.1.3.js\"></script>\n");
      out.write("<script src=\"js/jquery.backgroundPosition.js\"></script>\n");
      out.write("<script src=\"js/cs.js\"></script>\n");
      out.write("<script src=\"/js/modaal.js\" type=\"text/javascript\"></script>\n");
      out.write("<script>\n");
      out.write("$('.iframe').modaal({\n");
      out.write("\t\ttype: 'iframe',\n");
      out.write("\t\twidth: 1200,\n");
      out.write("\t\theight: 500\n");
      out.write("});\n");
      out.write("function getreserve(i,sql_status,rent_borrow_id,book_name,book_id,book_price,member_id,member_name,member_email){\n");
      out.write("\tvar checkbook = null;\n");
      out.write("\tif(sql_status == \"insert\"){\n");
      out.write("\t\tcheckbook =  confirm(\"確定租這本書:\" + book_name + \"?\");\n");
      out.write("\t}else if(sql_status == \"delete\"){\n");
      out.write("\t\tcheckbook =  confirm(\"確定取消這本書的預約:\" + book_name + \"?\");\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif( checkbook == true){\n");
      out.write("\t\tif(sql_status == \"insert\"){\n");
      out.write("\t\t\t$('#reservebtn' + i).attr('disabled', true);\n");
      out.write("\t\t}else if(sql_status == \"delete\"){\n");
      out.write("\t\t\t$('#cancel_reservebtn' + i).attr('disabled', true);\n");
      out.write("\t\t}\n");
      out.write("\t\t  $.ajax({\n");
      out.write("            url: \"/controller/ReserveHandler.jsp\",\n");
      out.write("            data: {\n");
      out.write("\t\t\t\tsql_status: sql_status,\n");
      out.write("\t\t\t\trent_borrow_id: rent_borrow_id,\n");
      out.write("\t\t\t\tbook_id: book_id,\n");
      out.write("\t\t\t\tbook_name: book_name,\n");
      out.write("\t\t\t\tbook_price: book_price,\n");
      out.write("\t\t\t\tmember_id: member_id,\n");
      out.write("\t\t\t\tmember_name: member_name,\n");
      out.write("\t\t\t\tmember_email: member_email\n");
      out.write("\t\t\t},\n");
      out.write("            type: \"POST\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            success: function(data,textStatus,jqXHR) {\n");
      out.write("            \tconsole.log(data);\n");
      out.write("            \tconsole.log(textStatus);\n");
      out.write("            \tconsole.log(jqXHR);\n");
      out.write("            \tif(data == 2){\n");
      out.write("\t\t\t\t\tconsole.log('預約成功');\n");
      out.write("\t\t\t\t\tif(sql_status == \"insert\"){\n");
      out.write("\t\t\t\t\t\talert('預約成功!請在預約到期日之前來店取書，謝謝。');\n");
      out.write("\t\t\t\t\t}else if(sql_status == \"delete\"){\n");
      out.write("\t\t\t\t\t\talert('取消預約成功!歡迎您再次在本網站選書，謝謝。');\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}else if(data == 5){\n");
      out.write("\t\t\t\t\talert('書都借光光了!下次請早，謝謝。');\n");
      out.write("\t\t\t\t} else {\n");
      out.write("            \t\talert('系統錯誤，請通知網站管理員');\n");
      out.write("            \t}\n");
      out.write("            },\n");
      out.write("            error: function(XMLHttpRequest, textStatus, errorThrown) {\n");
      out.write("            \tconsole.log('預約失敗');\n");
      out.write("            \tconsole.log(\"XMLHttpRequest.status=\"+XMLHttpRequest.status+\n");
      out.write("\t\t\t    \t\t\"\\nXMLHttpRequest.readyState=\"+XMLHttpRequest.readyState+\"\\ntextStatus=\"+textStatus+\"\\errorThrown=\"+errorThrown);\n");
      out.write("            },\n");
      out.write("            complete: function(XMLHttpRequest) {\n");
      out.write("\t\t\t\tif(sql_status == \"insert\"){\n");
      out.write("\t\t\t\t\t$('#reservebtn' + i).attr('disabled', false);\n");
      out.write("\t\t\t\t}else if(sql_status == \"delete\"){\n");
      out.write("\t\t\t\t\t$('#cancel_reservebtn' + i).attr('disabled', false);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tlocation.reload();\n");
      out.write("            \tconsole.log('預約結果');\n");
      out.write("            \tconsole.log(XMLHttpRequest);\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("        \t});\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
} else{
	out.println ("<script language='javascript'> alert('會員請先登入，謝謝!'); location.href='login.jsp'; </script>");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
