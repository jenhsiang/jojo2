/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M4
 * Generated at: 2016-11-11 13:33:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.__0040admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import teachDB.DbBean;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("teachDB.DbBean");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

if ( session.getAttribute ("sesAdminID") != null) {
		response.sendRedirect ("admin.jsp");
		return;
}

String adminID = "";
String adminPW = "";

String act = request.getParameter("act");
String admin_ip  =request.getRemoteAddr();
String rand = (String)session.getAttribute("rand");
	String input = request.getParameter("rand");

if ( act != null ) {
	if ( act.equals("process") ) {
		try {
			adminID = request.getParameter("adminID").trim();
			adminPW = request.getParameter("adminPW").trim();
			boolean checkip = false;
			DbBean db = new DbBean();
				List iplist = db.SelectRS("select ipaddress from adminfilter where deleteflag = 0 ");				
				if( iplist != null && iplist.size() > 0 ) {
					for ( int i = 0; i < iplist.size(); i++ ) {
						Map ipmap = (Map)iplist.get(i); 
						if( ipmap.get("ipaddress").toString().equals(admin_ip) ) {
							checkip = true;
						}else{
							out.println("<script>alert('未授權');top.location.href='/';</script>");
						}			
					} 
				}else{
					checkip = true;
				}
				if(checkip){
					List loginList = new ArrayList();
					loginList.add(adminID);
					loginList.add(adminPW);
					List userlist = db.SelectRSwhere("select * from adminuser where a_userid=? and a_passwd = ? and deleteflag = 0",loginList);
					
					if ( userlist != null && userlist.size()>0 && rand.equals(input)) { 
						for ( int i = 0; i < userlist.size(); i++ ) {
							Map usermap = (Map)userlist.get(i); 
								session.setAttribute ("sesMainAdmin",usermap.get("admin").toString());
								session.setAttribute ("sesAdminName",usermap.get("a_username").toString());
						}
						session.setAttribute ("sesAdminID",adminID);
						response.sendRedirect ("admin.jsp");
						return;
					} else {
						if(!rand.equals(input)){
							out.println ("<script language='javascript'>alert('驗證碼輸入錯誤.');location.href='/@admin';</script><noscript>Your browser does not support Script!</noscript>");
						}else{
							out.println ("<script language='javascript'>alert('帳號或密碼錯誤.');location.href='/@admin';</script><noscript>Your browser does not support Script!</noscript>");
						}
						return;
					}
				}
			
		} catch ( Exception e ) {
			out.println ("<script language='javascript'>alert('非法存取.');location.href='/@admin';</script><noscript>Your browser does not support Script!</noscript>");
			return;
		}
	}
}

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title>測試後台</title>\n");
      out.write("<link href=\"/style.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("    <div id=\"login-container\">\n");
      out.write("        \t<div class=\"login-logo\"><img src=\"avatar.jpg\" width=\"70\" height=\"58\" alt=\"天天學桌遊\" border=\"0\"><div class=\"company-2\" style=\"color:#0000FF\">天天學桌遊後台</div></div>\n");
      out.write("        <div class=\"login-content\">\n");
      out.write("         <form name=\"frmAdminLogin1\" onsubmit='return isAdminLogin(1)'>\n");
      out.write("        \t<div class=\"id\"><input type=\"text\" name=\"adminID\" class=\"text\" placeholder=\"帳號\"></div>\n");
      out.write("         </form>\n");
      out.write("        \t<form name=\"frmAdminLogin2\" action=\"\" onsubmit='return isAdminLogin(2)' method=\"post\">\n");
      out.write("                        <input type=\"hidden\" name=\"act\" value=\"process\">\n");
      out.write("                        <input type=\"hidden\" name=\"adminID\">\n");
      out.write("        \t<div class=\"pd\"><input type=\"password\" name=\"adminPW\" class=\"text\" placeholder=\"密碼\"></div>\n");
      out.write("            <div class=\"ck\"><input type=\"text\" name=\"rand\" maxlength=\"4\" class=\"text3\" placeholder=\"請輸入驗證碼\" onKeyDown=\"toQuery()\"><div class=\"ckimg\"><img border=0 src=\"image.jsp\"  width=\"94\" heigh=\"34\" border=\"0\"></div></div>\n");
      out.write("        \t<div class=\"bt\"><input type=\"button\" value=\"送出\" class=\"login-button\" onclick='submitAdminLogin()'>\n");
      out.write("        \t<input type=\"reset\" value=\"取消\" class=\"login-button\"></div>\n");
      out.write("        \t </form>\n");
      out.write("         </div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("<script language='javascript'>\n");
      out.write("    function isAdminLogin (n) {\n");
      out.write("        var f1 = frmAdminLogin1;\n");
      out.write("        var f2 = frmAdminLogin2;\n");
      out.write("\n");
      out.write("        f2.adminID.value = f1.adminID.value;\n");
      out.write("\n");
      out.write("        if (n == 1) {\n");
      out.write("            if (f1.adminID.value == \"\") {\n");
      out.write("                alert (\"請輸入帳號.\");\n");
      out.write("                return false;\n");
      out.write("            } else {\n");
      out.write("                f2.adminPW.focus ();\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        } else if (n == 2) {\n");
      out.write("            if (f2.adminID.value == \"\") {\n");
      out.write("                alert (\"請輸入帳號.\");\n");
      out.write("                f1.adminID.focus ();\n");
      out.write("                return false;\n");
      out.write("            } else {\n");
      out.write("                if (f2.adminPW.value == \"\") {\n");
      out.write("                    alert (\"請輸入密碼.\");\n");
      out.write("                    f2.adminPW.focus ();\n");
      out.write("                    return false;\n");
      out.write("                } else {\n");
      out.write("                    return true;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function submitAdminLogin () {\n");
      out.write("        if (!isAdminLogin(2)) return;\n");
      out.write("        else {\n");
      out.write("            frmAdminLogin2.submit ();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\tfunction toQuery(){\n");
      out.write("\t\tif( event.keyCode == 13 ){\n");
      out.write("\t\t\tsubmitAdminLogin();\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
